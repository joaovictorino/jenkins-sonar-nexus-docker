pipeline{
    agent any 
    tools {
        "org.jenkinsci.plugins.terraform.TerraformInstallation" "terraform"
    }
    environment {
        TF_HOME = tool('terraform')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"
        image = "auladockeracr.azurecr.io/bank:latest"
    }
    stages {
        stage('Building our image') {
            steps{
                dir("app"){
                    script {
                        dockerImage = docker.build image
                    }
                }
            }
        }
    
        stage('Terraform Init'){
            steps {
                dir("infra/terraform"){
                    withCredentials([azureServicePrincipal('azure')]) {
                        sh """
                            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID           
                            terraform init 
                            terraform plan -var "client_id=$AZURE_CLIENT_ID" -var "client_secret=$AZURE_CLIENT_SECRET" -var "subscription_id=$AZURE_SUBSCRIPTION_ID" -var "tenant_id=$AZURE_TENANT_ID"
                        """
                    }
                }
            }
        }

        stage('Terraform Validate'){
            steps {
                dir("infra/terraform"){
                    withCredentials([azureServicePrincipal('azure')]) {
                        sh """
                            terraform validate
                        """
                    }
                }
            }
        }

        stage('Terraform Plan'){
            steps {
                dir("infra/terraform"){
                    withCredentials([azureServicePrincipal('azure')]) {
                        sh """
                            terraform plan
                        """
                    }
                }
            }
        }

        stage('Waiting for Approval'){
            steps {
                timeout(time: 10, unit: 'MINUTES') {
                    input (message: "Deploy the infrastructure?")
                }
            }
        }
    
        stage('Terraform Apply'){
            steps {
                dir("infra/terraform"){
                    withCredentials([azureServicePrincipal('azure')]) {
                        sh """
                            terraform apply -auto-approve -var "client_id=$ARM_CLIENT_ID" -var "client_secret=$ARM_CLIENT_SECRET" -var "subscription_id=$ARM_SUBSCRIPTION_ID" -var "tenant_id=$ARM_TENANT_ID"
                        """
                    }
                }
            }
        }
    }
}